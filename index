<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Sistema de sorteios e concursos online - Participe de forma segura e transparente">
    <meta name="keywords" content="sorteio, concurso, participar, ganhador, prÃªmio">
    <meta name="author" content="Sistema de Sorteios">
    <meta name="robots" content="index, follow">
    <meta http-equiv="Content-Security-Policy" content="default-src 'self' 'unsafe-inline' https://www.gstatic.com; script-src 'self' 'unsafe-inline' https://www.gstatic.com; style-src 'self' 'unsafe-inline';">
    <meta http-equiv="X-Content-Type-Options" content="nosniff">
    <meta http-equiv="X-Frame-Options" content="DENY">
    <meta http-equiv="X-XSS-Protection" content="1; mode=block">
    <title>Sistema de Sorteios - Participar do Concurso</title>
    <style>
        body {
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            margin: 0;
            padding: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            background: white;
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            text-align: center;
        }

        .title {
            color: #333;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 30px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .form-group {
            margin-bottom: 25px;
            text-align: left;
        }

        .form-label {
            display: block;
            color: #555;
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background: #f8f9fa;
            box-sizing: border-box;
        }

        .form-input:focus {
            outline: none;
            border-color: #667eea;
            background: white;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .submit-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 18px 40px;
            border-radius: 12px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 10px;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

        .success-message {
            background: #d4edda;
            color: #155724;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
            border: 1px solid #c3e6cb;
            display: none;
        }

        .confetti {
            position: fixed;
            width: 10px;
            height: 10px;
            background: #f39c12;
            animation: confetti-fall 3s linear infinite;
            z-index: 1000;
        }

        .confetti:nth-child(odd) {
            background: #e74c3c;
            width: 8px;
            height: 8px;
            animation-duration: 2.5s;
        }

        .confetti:nth-child(even) {
            background: #3498db;
        }

        .confetti:nth-child(3n) {
            background: #2ecc71;
            width: 6px;
            height: 6px;
            animation-duration: 3.5s;
        }

        .confetti:nth-child(4n) {
            background: #9b59b6;
            width: 12px;
            height: 4px;
        }

        .confetti:nth-child(5n) {
            background: #f1c40f;
            width: 4px;
            height: 12px;
            animation-duration: 2.8s;
        }

        @keyframes confetti-fall {
            0% {
                transform: translateY(-100vh) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(720deg);
                opacity: 0;
            }
        }

        .celebration-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 999;
            display: none;
        }

        .firework {
            position: absolute;
            width: 4px;
            height: 4px;
            border-radius: 50%;
            animation: firework 1s ease-out forwards;
        }

        @keyframes firework {
            0% {
                transform: scale(1);
                opacity: 1;
            }
            100% {
                transform: scale(20);
                opacity: 0;
            }
        }

        .bounce-animation {
            animation: bounce 0.6s ease-in-out;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-20px);
            }
            60% {
                transform: translateY(-10px);
            }
        }

        .secret-button {
            position: fixed;
            bottom: 15px;
            right: 15px;
            width: 30px;
            height: 30px;
            background: rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 12px;
            opacity: 0.2;
            transition: all 0.3s ease;
            z-index: 100;
        }

        .secret-button:hover {
            opacity: 0.5;
            transform: scale(1.05);
        }

        .secret-modal {
            display: none;
            position: fixed;
            z-index: 2000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }

        .secret-modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 400px;
            text-align: center;
            position: relative;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        }

        .login-form {
            margin-top: 20px;
        }

        .password-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            margin: 10px 0;
            box-sizing: border-box;
        }

        .password-input:focus {
            outline: none;
            border-color: #667eea;
        }

        .database-view {
            display: none;
            text-align: left;
            margin-top: 20px;
        }

        .user-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .user-table th,
        .user-table td {
            padding: 10px;
            border: 1px solid #ddd;
            text-align: left;
        }

        .user-table th {
            background: #f8f9fa;
            font-weight: 600;
        }

        .user-table tr:nth-child(even) {
            background: #f8f9fa;
        }

        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 10px;
        }

        .close-modal {
            position: absolute;
            right: 15px;
            top: 15px;
            font-size: 24px;
            cursor: pointer;
            color: #999;
        }

        .close-modal:hover {
            color: #333;
        }

        .admin-options {
            margin-top: 20px;
        }

        .admin-btn {
            display: block;
            width: 100%;
            margin: 10px 0;
            padding: 12px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .admin-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .loading-indicator {
            display: none;
            text-align: center;
            padding: 20px;
            color: #667eea;
            font-weight: 600;
        }

        .firebase-status {
            background: #e8f5e8;
            color: #2d5a2d;
            padding: 10px;
            border-radius: 8px;
            margin: 10px 0;
            font-size: 12px;
            text-align: center;
            border: 1px solid #c3e6cb;
        }

        @media (max-width: 480px) {
            .container {
                padding: 30px 20px;
                margin: 10px;
            }
            
            .title {
                font-size: 24px;
            }
            
            .secret-button {
                bottom: 15px;
                right: 15px;
                width: 35px;
                height: 35px;
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="title">ð¯ Sistema de Sorteios</h1>
        
        <form id="concursoForm">
            <div class="form-group">
                <label class="form-label" for="platformId">ID na Plataforma</label>
                <input 
                    type="number" 
                    id="platformId" 
                    name="platformId" 
                    class="form-input" 
                    placeholder="Digite seu ID da plataforma"
                    required
                >
            </div>
            
            <div class="form-group">
                <label class="form-label" for="firstName">Nome</label>
                <input 
                    type="text" 
                    id="firstName" 
                    name="firstName" 
                    class="form-input" 
                    placeholder="Digite seu nome"
                    required
                >
            </div>
            
            <button type="submit" class="submit-btn">
                Concorrer Agora
            </button>
        </form>
        
        <div id="successMessage" class="success-message">
            â InscriÃ§Ã£o realizada com sucesso! Boa sorte no sorteio!
        </div>
        
        <div style="margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 10px; border-left: 4px solid #28a745; font-size: 14px; color: #666;">
            <div style="font-weight: 600; color: #28a745; margin-bottom: 8px;">ð¡ï¸ Site Seguro e ConfiÃ¡vel</div>
            <div>Este Ã© um sistema legÃ­timo de sorteios. Todos os dados sÃ£o processados localmente no seu navegador e nÃ£o sÃ£o enviados para servidores externos. O sorteio Ã© realizado de forma transparente e aleatÃ³ria.</div>
        </div>
    </div>

    <div id="celebrationOverlay" class="celebration-overlay"></div>

    <!-- BotÃ£o discreto -->
    <div id="secretButton" class="secret-button">â¢</div>
    
    <!-- Modal administrativo -->
    <div id="secretModal" class="secret-modal">
        <div class="secret-modal-content">
            <span class="close-modal">&times;</span>
            
            <!-- Tela de Login -->
            <div id="loginScreen">
                <h3>ð Acesso Administrativo</h3>
                <div class="login-form">
                    <input 
                        type="password" 
                        id="adminPassword" 
                        class="password-input" 
                        placeholder="Digite a senha administrativa"
                    >
                    <button class="admin-btn" onclick="checkPassword()">Entrar</button>
                    <div id="errorMessage" class="error-message" style="display: none;"></div>
                </div>
            </div>
            
            <!-- Banco de Dados -->
            <div id="databaseScreen" class="database-view">
                <h3>ð Banco de Dados Firebase</h3>
                <div id="firebaseStatus" class="firebase-status">
                    ð¥ Conectando ao Firebase em tempo real...
                </div>
                <div id="loadingIndicator" class="loading-indicator">
                    Carregando dados do Firebase...
                </div>
                <table class="user-table">
                    <thead>
                        <tr>
                            <th>ID Plataforma</th>
                            <th>Nome</th>
                            <th>Data InscriÃ§Ã£o</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody">
                        <!-- Dados serÃ£o inseridos aqui -->
                    </tbody>
                </table>
                <div style="margin-top: 20px; text-align: center;">
                    <button class="admin-btn" onclick="startQuickRaffle()">ð² Iniciar Sorteio</button>
                    <button class="admin-btn" onclick="clearAllData()" style="background: linear-gradient(135deg, #dc3545, #c82333);">ðï¸ Limpar Dados</button>
                    <button class="admin-btn" onclick="logout()">Sair</button>
                </div>
                
                <!-- Tela de Sorteio Simples -->
                <div id="raffleDisplay" style="display: none; text-align: center; margin-top: 30px; padding: 30px; background: #f8f9fa; border-radius: 15px; border: 2px solid #667eea;">
                    <h3 id="raffleTitle" style="color: #667eea; font-size: 24px; margin-bottom: 20px;">ð¯ SORTEANDO...</h3>
                    <div id="raffleContent" style="font-size: 28px; font-weight: bold; color: #333; min-height: 80px; display: flex; align-items: center; justify-content: center; background: white; border-radius: 10px; margin: 20px 0; animation: name-flash 0.2s ease-in-out;">
                        Preparando sorteio...
                    </div>
                    <div id="raffleStatus" style="color: #666; font-size: 16px; margin-top: 15px;">
                        Aguarde 5 segundos...
                    </div>
                    <button id="backToTableBtn" class="admin-btn" onclick="backToTable()" style="display: none; margin-top: 20px;">ð Voltar Ã  Tabela</button>
                </div>
            </div>
        </div>
    </div>

    <script type="module">
        // ConfiguraÃ§Ã£o do Firebase - Servidor Real
        import { initializeApp } from "https://www.gstatic.com/firebasejs/12.3.0/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/12.3.0/firebase-analytics.js";
        import { getFirestore, collection, addDoc, getDocs, deleteDoc, doc, query, orderBy, onSnapshot } from "https://www.gstatic.com/firebasejs/12.3.0/firebase-firestore.js";

        // ConfiguraÃ§Ã£o real do Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyAAkfRicJgQbCK9KSM0Ic0wUVNKnvb5B4Y",
            authDomain: "sorteios-336f0.firebaseapp.com",
            projectId: "sorteios-336f0",
            storageBucket: "sorteios-336f0.firebasestorage.app",
            messagingSenderId: "168400059081",
            appId: "1:168400059081:web:89000c0b7fd09a71f6eb18",
            measurementId: "G-H96WRM7KVX"
        };

        // Inicializar Firebase
        const app = initializeApp(firebaseConfig);
        const analytics = getAnalytics(app);
        const db = getFirestore(app);

        // Banco de dados local (backup)
        let usersDatabase = [];
        const adminPassword = 'admin123';

        function createConfetti() {
            const celebrationOverlay = document.getElementById('celebrationOverlay');
            celebrationOverlay.style.display = 'block';
            
            // Criar confetes
            for (let i = 0; i < 50; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.animationDelay = Math.random() * 3 + 's';
                confetti.style.animationDuration = (Math.random() * 2 + 2) + 's';
                celebrationOverlay.appendChild(confetti);
            }
            
            // Criar fogos de artifÃ­cio
            for (let i = 0; i < 8; i++) {
                setTimeout(() => {
                    const firework = document.createElement('div');
                    firework.className = 'firework';
                    firework.style.left = Math.random() * 100 + '%';
                    firework.style.top = Math.random() * 50 + '%';
                    
                    const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#ffeaa7', '#dda0dd', '#98d8c8'];
                    firework.style.background = colors[Math.floor(Math.random() * colors.length)];
                    
                    celebrationOverlay.appendChild(firework);
                    
                    setTimeout(() => {
                        firework.remove();
                    }, 1000);
                }, i * 200);
            }
            
            // Limpar confetes apÃ³s 4 segundos
            setTimeout(() => {
                celebrationOverlay.innerHTML = '';
                celebrationOverlay.style.display = 'none';
            }, 4000);
        }

        // Bloquear letras no campo ID
        document.getElementById('platformId').addEventListener('keypress', function(e) {
            // Permitir apenas nÃºmeros (0-9)
            if (!/[0-9]/.test(e.key) && e.key !== 'Backspace' && e.key !== 'Delete' && e.key !== 'Tab' && e.key !== 'Enter') {
                e.preventDefault();
            }
        });

        // Bloquear colar texto com letras
        document.getElementById('platformId').addEventListener('paste', function(e) {
            e.preventDefault();
            const paste = (e.clipboardData || window.clipboardData).getData('text');
            if (/^\d+$/.test(paste)) {
                this.value = paste;
            }
        });

        // BotÃ£o administrativo
        document.getElementById('secretButton').addEventListener('click', function() {
            document.getElementById('secretModal').style.display = 'block';
            showLoginScreen();
        });

        // Verificar senha
        window.checkPassword = function() {
            const inputPassword = document.getElementById('adminPassword').value;
            const errorDiv = document.getElementById('errorMessage');
            
            if (inputPassword === adminPassword) {
                showDatabaseScreen();
                errorDiv.style.display = 'none';
            } else {
                errorDiv.textContent = 'Senha incorreta!';
                errorDiv.style.display = 'block';
                document.getElementById('adminPassword').value = '';
            }
        }

        // Mostrar tela de login
        function showLoginScreen() {
            document.getElementById('loginScreen').style.display = 'block';
            document.getElementById('databaseScreen').style.display = 'none';
            document.getElementById('adminPassword').value = '';
            document.getElementById('errorMessage').style.display = 'none';
        }

        // Mostrar banco de dados
        function showDatabaseScreen() {
            document.getElementById('loginScreen').style.display = 'none';
            document.getElementById('databaseScreen').style.display = 'block';
            loadUserDataFromFirebase();
        }

        // Listener em tempo real para Firebase
        let unsubscribe = null;

        // Carregar dados do Firebase com sincronizaÃ§Ã£o em tempo real
        function loadUserDataFromFirebase() {
            const loadingDiv = document.getElementById('loadingIndicator');
            const tbody = document.getElementById('userTableBody');
            
            try {
                loadingDiv.style.display = 'block';
                tbody.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #666;">Conectando ao Firebase...</td></tr>';
                
                // Configurar listener em tempo real
                const q = query(collection(db, "participants"), orderBy("timestamp", "desc"));
                
                // Se jÃ¡ existe um listener, desconectar
                if (unsubscribe) {
                    unsubscribe();
                }
                
                // Criar novo listener em tempo real
                unsubscribe = onSnapshot(q, (querySnapshot) => {
                    usersDatabase = [];
                    tbody.innerHTML = '';
                    
                    if (querySnapshot.empty) {
                        tbody.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #666;">Nenhum usuÃ¡rio inscrito ainda</td></tr>';
                        document.getElementById('firebaseStatus').innerHTML = 'ð¥ Conectado ao Firebase - 0 participantes';
                        loadingDiv.style.display = 'none';
                        return;
                    }
                    
                    querySnapshot.forEach((doc) => {
                        const userData = doc.data();
                        userData.id = doc.id; // Salvar ID do documento
                        usersDatabase.push(userData);
                        
                        const row = tbody.insertRow();
                        row.insertCell(0).textContent = userData.platformId;
                        row.insertCell(1).textContent = userData.firstName;
                        row.insertCell(2).textContent = userData.date;
                        
                        // Destacar nova entrada (se foi adicionada recentemente)
                        const now = new Date();
                        const userDate = userData.timestamp?.toDate() || new Date(userData.date);
                        const diffMinutes = (now - userDate) / (1000 * 60);
                        
                        if (diffMinutes < 1) { // Menos de 1 minuto
                            row.style.background = '#d4edda';
                            row.style.border = '2px solid #28a745';
                            row.style.animation = 'bounce 0.6s ease-in-out';
                            
                            // Remover destaque apÃ³s 5 segundos
                            setTimeout(() => {
                                row.style.background = '';
                                row.style.border = '';
                                row.style.animation = '';
                            }, 5000);
                        }
                    });
                    
                    // Atualizar status em tempo real
                    document.getElementById('firebaseStatus').innerHTML = `ð¥ Sincronizado em tempo real - ${usersDatabase.length} participantes`;
                    document.getElementById('firebaseStatus').style.background = '#e8f5e8';
                    document.getElementById('firebaseStatus').style.color = '#2d5a2d';
                    
                    loadingDiv.style.display = 'none';
                    
                    console.log(`â Dados atualizados em tempo real: ${usersDatabase.length} participantes`);
                    
                }, (error) => {
                    console.error("Erro no listener em tempo real:", error);
                    tbody.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #dc3545;">Erro de conexÃ£o em tempo real</td></tr>';
                    document.getElementById('firebaseStatus').innerHTML = 'â Erro de sincronizaÃ§Ã£o Firebase';
                    document.getElementById('firebaseStatus').style.background = '#f8d7da';
                    document.getElementById('firebaseStatus').style.color = '#721c24';
                    loadingDiv.style.display = 'none';
                });
                
            } catch (error) {
                console.error("Erro ao configurar listener:", error);
                tbody.innerHTML = '<tr><td colspan="3" style="text-align: center; color: #dc3545;">Erro ao conectar com Firebase</td></tr>';
                document.getElementById('firebaseStatus').innerHTML = 'â Erro de conexÃ£o com Firebase';
                document.getElementById('firebaseStatus').style.background = '#f8d7da';
                document.getElementById('firebaseStatus').style.color = '#721c24';
                loadingDiv.style.display = 'none';
            }
        }

        // Salvar usuÃ¡rio no Firebase
        async function saveUserToFirebase(platformId, firstName) {
            try {
                // Verificar se ID jÃ¡ existe
                const q = query(collection(db, "participants"));
                const querySnapshot = await getDocs(q);
                
                let idExists = false;
                querySnapshot.forEach((doc) => {
                    if (doc.data().platformId === platformId) {
                        idExists = true;
                    }
                });
                
                if (idExists) {
                    alert('â Este ID jÃ¡ estÃ¡ cadastrado no sistema!');
                    return false;
                }
                
                // Salvar no Firebase
                const docRef = await addDoc(collection(db, "participants"), {
                    platformId: platformId,
                    firstName: firstName,
                    date: new Date().toLocaleString('pt-BR'),
                    timestamp: new Date()
                });
                
                console.log("â Documento salvo no Firebase com ID: ", docRef.id);
                console.log("ð UsuÃ¡rio cadastrado em tempo real no Firebase");
                
                // Salvar backup local
                const newUser = {
                    platformId: platformId,
                    firstName: firstName,
                    date: new Date().toLocaleString('pt-BR')
                };
                
                let localUsers = JSON.parse(localStorage.getItem('usersDatabase')) || [];
                localUsers.push(newUser);
                localStorage.setItem('usersDatabase', JSON.stringify(localUsers));
                
                // Log para debug
                console.log(`ð¥ UsuÃ¡rio ${firstName} (ID: ${platformId}) salvo no Firebase em tempo real`);
                
                return true;
                
            } catch (error) {
                console.error("Erro ao salvar no Firebase:", error);
                
                // Fallback para localStorage se Firebase falhar
                const newUser = {
                    platformId: platformId,
                    firstName: firstName,
                    date: new Date().toLocaleString('pt-BR')
                };
                
                let localUsers = JSON.parse(localStorage.getItem('usersDatabase')) || [];
                
                // Verificar duplicata local
                const exists = localUsers.some(user => user.platformId === platformId);
                if (exists) {
                    alert('â Este ID jÃ¡ estÃ¡ cadastrado no sistema!');
                    return false;
                }
                
                localUsers.push(newUser);
                localStorage.setItem('usersDatabase', JSON.stringify(localUsers));
                
                alert('â ï¸ Salvo localmente (Firebase indisponÃ­vel)');
                return true;
            }
        }

        // Limpar todos os dados do Firebase
        window.clearAllData = async function() {
            if (usersDatabase.length === 0) {
                alert('NÃ£o hÃ¡ dados para limpar!');
                return;
            }
            
            const confirmDelete = confirm(`â ï¸ ATENÃÃO!\n\nVocÃª tem certeza que deseja APAGAR TODOS OS DADOS?\n\nð Total de usuÃ¡rios: ${usersDatabase.length}\n\nâ ï¸ Esta aÃ§Ã£o NÃO PODE ser desfeita!`);
            
            if (confirmDelete) {
                const doubleConfirm = confirm('ð¨ CONFIRMAÃÃO FINAL ð¨\n\nDigite OK para confirmar a exclusÃ£o PERMANENTE de todos os dados.\n\nEsta Ã© sua Ãºltima chance de cancelar!');
                
                if (doubleConfirm) {
                    try {
                        // Mostrar loading
                        document.getElementById('loadingIndicator').style.display = 'block';
                        document.getElementById('loadingIndicator').textContent = 'Apagando dados do Firebase...';
                        
                        // Apagar todos os documentos do Firebase
                        const q = query(collection(db, "participants"));
                        const querySnapshot = await getDocs(q);
                        
                        const deletePromises = [];
                        querySnapshot.forEach((document) => {
                            deletePromises.push(deleteDoc(doc(db, "participants", document.id)));
                        });
                        
                        await Promise.all(deletePromises);
                        
                        // Limpar dados locais
                        usersDatabase = [];
                        localStorage.removeItem('usersDatabase');
                        
                        // Recarregar tabela
                        await loadUserDataFromFirebase();
                        
                        // Mostrar confirmaÃ§Ã£o
                        alert('â Todos os dados foram apagados com sucesso!\n\nðï¸ Firebase e backup local limpos\nð 0 usuÃ¡rios restantes');
                        
                    } catch (error) {
                        console.error("Erro ao limpar Firebase:", error);
                        
                        // Fallback: limpar apenas local
                        usersDatabase = [];
                        localStorage.removeItem('usersDatabase');
                        document.getElementById('userTableBody').innerHTML = '<tr><td colspan="3" style="text-align: center; color: #666;">Nenhum usuÃ¡rio inscrito ainda</td></tr>';
                        
                        alert('â ï¸ Dados locais limpos (erro no Firebase)');
                    } finally {
                        document.getElementById('loadingIndicator').style.display = 'none';
                    }
                }
            }
        }

        // Logout
        window.logout = function() {
            // Desconectar listener em tempo real
            if (unsubscribe) {
                unsubscribe();
                unsubscribe = null;
                console.log("ð Listener Firebase desconectado");
            }
            showLoginScreen();
        }

        // Iniciar sorteio rÃ¡pido de 5 segundos
        window.startQuickRaffle = function() {
            if (usersDatabase.length === 0) {
                alert('NÃ£o hÃ¡ usuÃ¡rios cadastrados para sortear!');
                return;
            }
            
            if (usersDatabase.length === 1) {
                alert('Ã necessÃ¡rio pelo menos 2 usuÃ¡rios para realizar um sorteio!');
                return;
            }
            
            // Mostrar tela de sorteio
            document.getElementById('raffleDisplay').style.display = 'block';
            document.getElementById('raffleTitle').textContent = 'ð¯ SORTEANDO...';
            document.getElementById('raffleContent').textContent = 'Preparando sorteio...';
            document.getElementById('raffleStatus').textContent = 'Aguarde 6 segundos...';
            document.getElementById('backToTableBtn').style.display = 'none';
            
            let currentIndex = 0;
            let speed = 50; // Velocidade inicial (ms)
            let iterations = 0;
            const maxIterations = 120; // Total de iteraÃ§Ãµes em 6 segundos
            
            const raffleInterval = setInterval(() => {
                // Selecionar usuÃ¡rio aleatÃ³rio
                currentIndex = Math.floor(Math.random() * usersDatabase.length);
                const currentUser = usersDatabase[currentIndex];
                
                // Mostrar usuÃ¡rio atual
                document.getElementById('raffleContent').innerHTML = `
                    <div style="animation: name-flash 0.1s ease-in-out;">
                        <div style="font-size: 18px; color: #999; margin-bottom: 8px;">ID: ${currentUser.platformId}</div>
                        <div style="font-size: 32px; color: #667eea;">${currentUser.firstName}</div>
                    </div>
                `;
                
                iterations++;
                
                // Diminuir velocidade gradualmente para criar suspense
                if (iterations > 80) {
                    speed += 15; // Desacelerar mais rÃ¡pido no final
                } else if (iterations > 50) {
                    speed += 8; // Desacelerar moderadamente
                } else if (iterations > 25) {
                    speed += 3; // Desacelerar levemente
                }
                
                // Parar apÃ³s aproximadamente 5 segundos
                if (iterations >= maxIterations) {
                    clearInterval(raffleInterval);
                    
                    // Pausa dramÃ¡tica antes de mostrar o ganhador
                    document.getElementById('raffleContent').innerHTML = `
                        <div style="font-size: 28px; color: #667eea; animation: dramatic-pause 1s ease-in-out;">
                            ð¥ E O GANHADOR Ã... ð¥
                        </div>
                    `;
                    
                    setTimeout(() => {
                        showWinner(currentUser);
                    }, 1500);
                }
            }, speed);
            
            // Ajustar intervalo dinamicamente
            let speedAdjuster = setInterval(() => {
                clearInterval(raffleInterval);
                
                const newInterval = setInterval(() => {
                    currentIndex = Math.floor(Math.random() * usersDatabase.length);
                    const currentUser = usersDatabase[currentIndex];
                    
                    document.getElementById('raffleContent').innerHTML = `
                        <div style="animation: name-flash 0.1s ease-in-out;">
                            <div style="font-size: 18px; color: #999; margin-bottom: 8px;">ID: ${currentUser.platformId}</div>
                            <div style="font-size: 32px; color: #667eea;">${currentUser.firstName}</div>
                        </div>
                    `;
                    
                    iterations++;
                    
                    if (iterations >= maxIterations) {
                        clearInterval(newInterval);
                        clearInterval(speedAdjuster);
                        
                        document.getElementById('raffleContent').innerHTML = `
                            <div style="font-size: 28px; color: #667eea; animation: dramatic-pause 1s ease-in-out;">
                                ð¥ E O GANHADOR Ã... ð¥
                            </div>
                        `;
                        
                        setTimeout(() => {
                            showWinner(currentUser);
                        }, 1500);
                    }
                }, speed);
                
                speed += (iterations > 80) ? 15 : (iterations > 50) ? 8 : 3;
            }, 100);
        }
        
        // Mostrar ganhador final
        function showWinner(winner) {
            const now = new Date();
            
            document.getElementById('raffleTitle').innerHTML = 'ð GANHADOR OFICIAL';
            document.getElementById('raffleContent').innerHTML = `
                <div style="background: linear-gradient(135deg, #d4edda, #c3e6cb); padding: 30px; border-radius: 15px; border: 3px solid #28a745;">
                    <div style="background: #28a745; color: white; padding: 8px 20px; border-radius: 20px; font-size: 12px; font-weight: 700; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 20px; display: inline-block;">
                        VENCEDOR
                    </div>
                    <div style="font-size: 36px; font-weight: 900; color: #155724; margin-bottom: 20px;">
                        ${winner.firstName}
                    </div>
                    <div style="text-align: left; margin: 20px 0;">
                        <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 1px solid rgba(21, 87, 36, 0.1);">
                            <span style="font-weight: 600; color: #155724;">ID:</span>
                            <span style="font-weight: 700; color: #28a745;">${winner.platformId}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 1px solid rgba(21, 87, 36, 0.1);">
                            <span style="font-weight: 600; color: #155724;">Data:</span>
                            <span style="font-weight: 700; color: #28a745;">${now.toLocaleDateString('pt-BR')}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between; padding: 8px 0;">
                            <span style="font-weight: 600; color: #155724;">HorÃ¡rio:</span>
                            <span style="font-weight: 700; color: #28a745;">${now.toLocaleTimeString('pt-BR')}</span>
                        </div>
                    </div>
                </div>
            `;
            
            document.getElementById('raffleStatus').innerHTML = `
                <div style="color: #28a745; font-weight: bold;">
                    â Sorteio concluÃ­do com sucesso!
                </div>
            `;
            
            document.getElementById('backToTableBtn').style.display = 'inline-block';
            
            // Criar confetes de celebraÃ§Ã£o
            createConfetti();
        }
        
        // Voltar Ã  tabela
        window.backToTable = function() {
            document.getElementById('raffleDisplay').style.display = 'none';
        }

        // Enter para fazer login
        document.getElementById('adminPassword').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                checkPassword();
            }
        });

        // Fechar modal
        document.querySelector('.close-modal').addEventListener('click', function() {
            document.getElementById('secretModal').style.display = 'none';
        });

        // Fechar modal clicando fora
        document.getElementById('secretModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });

        document.getElementById('concursoForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const platformId = document.getElementById('platformId').value;
            const firstName = document.getElementById('firstName').value;
            
            if (platformId.trim() && firstName.trim()) {
                // Simula o processamento da inscriÃ§Ã£o
                const submitBtn = document.querySelector('.submit-btn');
                const container = document.querySelector('.container');
                const originalText = submitBtn.textContent;
                
                submitBtn.textContent = 'Processando...';
                submitBtn.disabled = true;
                
                // Salvar no Firebase
                const saved = await saveUserToFirebase(platformId, firstName);
                
                if (saved) {
                    setTimeout(() => {
                        // Iniciar celebraÃ§Ã£o
                        createConfetti();
                        container.classList.add('bounce-animation');
                        
                        document.getElementById('successMessage').style.display = 'block';
                        submitBtn.textContent = 'â Inscrito com Sucesso!';
                        submitBtn.style.background = '#28a745';
                        
                        // Reset apÃ³s 5 segundos
                        setTimeout(() => {
                            document.getElementById('concursoForm').reset();
                            document.getElementById('successMessage').style.display = 'none';
                            submitBtn.textContent = originalText;
                            submitBtn.disabled = false;
                            submitBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
                            container.classList.remove('bounce-animation');
                        }, 5000);
                    }, 500);
                } else {
                    // Erro ou ID duplicado
                    submitBtn.textContent = 'Erro na InscriÃ§Ã£o';
                    submitBtn.style.background = '#dc3545';
                    setTimeout(() => {
                        submitBtn.textContent = originalText;
                        submitBtn.disabled = false;
                        submitBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
                    }, 3000);
                }
            }
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'98b008ef402c275b',t:'MTc1OTg2Nzc1My4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
